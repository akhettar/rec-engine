definitions:
  model.ErrResponse:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  model.Item:
    properties:
      item:
        type: string
      score:
        type: number
    type: object
  model.ItemProbability:
    properties:
      item:
        type: string
      propability:
        type: number
      user:
        type: string
    type: object
  model.Items:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      user:
        type: string
    type: object
  model.Rate:
    properties:
      item:
        type: string
      score:
        type: number
      user:
        type: string
    type: object
  model.Recommendation:
    properties:
      item:
        type: string
      score:
        type: number
    type: object
  model.Recommendations:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Recommendation'
        type: array
      user:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/items:
    get:
      description: Gets the most popular items
      operationId: get-popular-items
      parameters:
      - description: number of results size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Items returned
          schema:
            $ref: '#/definitions/model.Items'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Get most popular items
  /api/items/user/{user}:
    get:
      description: Gets user items
      operationId: get-user-item
      parameters:
      - description: user ID
        in: path
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Items returned
          schema:
            $ref: '#/definitions/model.Items'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Get User Items
  /api/probability/user/{user}/item/{item}:
    get:
      description: Gets probability for a given user and item
      operationId: get-probability
      parameters:
      - description: user ID
        in: path
        name: user
        required: true
        type: string
      - description: item ID
        in: path
        name: item
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ItemProbability returned
          schema:
            $ref: '#/definitions/model.ItemProbability'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Get probability
  /api/rate:
    post:
      description: Adds rating for a given user with an item
      operationId: post-rate
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.Rate'
      produces:
      - application/json
      responses:
        "201":
          description: Rating created
          schema:
            $ref: '#/definitions/model.Rate'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Create rating for a gien user with an item
  /api/recommendation/user/{user}:
    get:
      description: Gets recommendations for a given user
      operationId: get-recommendations
      parameters:
      - description: user ID
        in: path
        name: user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Recommendation returned
          schema:
            $ref: '#/definitions/model.Recommendations'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrResponse'
      summary: Get recommendations
swagger: "2.0"
